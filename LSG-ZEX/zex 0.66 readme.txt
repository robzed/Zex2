Zex version 0.66 released 080701As built, 832*624 screen, 32 bit colour, zbuffer 16 bit. Edit zex.ini to your tastes.Changes over 0.65:1. Correct colours from 3dmf importer (Diffuse Colour - we can handle up to 32 colours per object)1a. Importer now reports 3dmf file name on Error.2. Test environment lighting fixed - set at -0.5,0,0 (i.e. to the left looking into z).3. z buffer improvements, still limitted by resolution though so some z fighting possible.4. LMON (in level file) now takes scale as param. Removed some obsolete params from LMON.5. Basic forward guns (space bar by default)6. Lasers when zbuffering on now draw correctly.7. Various low level engine variables brought out in Coffee   (see 'help engine' from console)8. Basic Collision detection - collision ON|OFF in console and shield damage to hit objects. Added     shield sound when player hits something (center stereo channel).    NOTE that RFIL must have the crashable flag set if you want to colide with an object.    The engine has the capability of pretty much correct collision handling (as we can apply a foce to a unit cube)    but I'm not sure we need to do that in Zex.        9. More stable engine (no more poking random memory, calling 'kill' wrongly etc)10. Player shield indicator now working. Recharge set to update at 2 sec intervals. Audible 'Danger' when shieldsget low. CWP shields warning light now working. Powered from  AC Bus, No AC power, no warning light or indicator.NPC shields are calculated in collision but it's up to NPC controllers to handle their own shield regen.11. Added some more low level vector funcs to matrix_primitives (to be used in collision.c when I do the proper coll_det when I've got rid of this arsy virus). Note that collision.c works with pointers to OCB's rather thanarray indices (and no, I don't know why, that's just the way it is...)12. Angular momentum now calculated in low level physics as a fucntion of mass and force. Previously hard wired to some arbitrary value (250 I think) so mass now has more effect on the dynamics. Ship thrusters power adjusted in ship_control accordingly so it behaves pretty much the same as before (but if you change the mass of the ship it now behaves correctly (i.e. when we take on cargo etc)). 13. added set_main_camera_object for console so you can type:3 set_main_camera_object.Which sets the camera in object 3 and prints the error returned. Returns 0 for OK, else -1 if you try to set the camera to a dead or non-existant object.A list of current active objects can be displayed by typing:show-active-objectswhich shows the object ID's along with their dynamic slot14. 3dmf Importer now imports Falcon, Cargobox and Shuttle OK. Note though the (sometimes) reversed text on textures? We can cope with up to 32 trimeshes in one file. Note it is not possible to set a diffuse colour and texture for the same trimesh; it's either textured or coloured. Need fix? 15. 3dmf importer now reports the filename on error.16 fixed screen selection cancel debug, and made it exit silently.  Trapped other conditions possible to return from this dialog as a standard report_error with number.17 fixed kill dead object problems18 added zclipping range variable to Coffee (ZMin)19 added focal distanced to Coffee (type help engine)20 created load_object which when passed an empty static ocb number, and with a filename and object id will load it with default characteristics into the static ocbs. 21 created summon-object which when passed a static ocb slot will bring the specific object in front of the camera.22 added extra type of parameter passing for structures which pass floats in ints to LSGF. 23 ammended coffee_interface.c in Zex to use new parameter passing type for set_velocity_in_mps() and set_abs_velocity().24 removed call to kill object in main_sel_screen.c (so did stu...)25 corrected call to set velocity in asteroid.zsl and summon_object.26 added dismiss_object.27 created object help file (help object in console) which details use of summon_object, load_object, and dismiss_object.28 added static_ID command that takes a 4 character ID (following) and returns the static id slot.so....static_ID XWNG summon_object... will create an instance of the xwing object right in front of you.29 added show-static-objects to give a list of currently loaded object models in the game. Changed name of show-active-ocbs to show-active-objects so that naming is the same (I tend to type object instead of ocb). Updated help file.30 added command line history buffer. Currently volatile across re-boots of zex. Bigger task than at first appeared! Works at the level of ACCEPT so any functions using accept will also have access to the history facility.31 added current command store when using history. Useful if you are looking for a previous command, but decide the current line was closest.32 blocked use of < and > cursor keys, since they entered an invalid character onto command line and have no editing use.33 extended history buffer from 8 to 16. (Simply a constant change.)34 slightly increased speed of Coffee by changing the construction of c variable and c constant access to be a leaf function. Reduces PPC instruction count from 10 to 5. LSGF change.35 Up-rev'd version twice for LSGF. Only change required is additions for velocity.(Note on ocb accessors: C code, even with optimiser on is fairly heavy compared to a variable access from Coffee. However, accessor functions are obviously (a) a lot easier to use, (b) a lot to maintain and keep synchronised, (c) less prone to side-effects. Before this is optimised we really need to analyse what the real benefit is. We probably don't call ocb accessors many time per frame).36. Coffee is running a test controller for the asteroids.37. Version set to 0.66, build number 15418.